version: '3'
services:
  #-----------------------------------------------------------------------------
  # MANAGEMENT
  #-----------------------------------------------------------------------------

  swag:
    container_name: swag
    hostname: swag
    restart: unless-stopped
    cap_add:
      - NET_ADMIN
    networks:
      apps: {}
    ports:
      - 80:80
      - 443:443
    environment:
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
      - URL=${DOMAIN_NAME}
      - SUBDOMAINS=wildcard
      - DNSPLUGIN=${DNS_PLUGIN}
      - VALIDATION=dns
      - EMAIL=${ACME_EMAIL}
      - ONLY_SUBDOMAINS=false
      - STAGING=false
    volumes:
      - '/etc/localtime:/etc/localtime:ro'
      - '${DOCKER_DIR}/swag:/config'
    image: linuxserver/swag:latest

  # redis - session database (more performance)
  authredis:
    container_name: authredis
    hostname: authredis
    restart: unless-stopped
    networks:
      apps: {}
    volumes:
      - ${DOCKER_DIR}/authredis:/bitnami/redis/data
      - ${DOCKER_DIR}/authredis/redis.conf:/opt/bitnami/redis/mounted-etc/redis.conf
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    secrets:
      - redis
    command: /opt/bitnami/scripts/redis/run.sh --requirepass ${REDIS_PASSWORD}
    image: bitnami/redis:latest

  # mariadb - used for authelia storage
  authmariadb:
    container_name: authmariadb
    hostname: authmariadb
    restart: unless-stopped
    networks:
      apps: {}
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - UMASK_SET=022
      - UMASK=022
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_DATABASE=authelia
      - MYSQL_USER=authelia
    volumes:
      - ${DOCKER_DIR}/authmariadb:/config
    image: linuxserver/mariadb:latest

  # Authelia - Self-Hosted Single Sign-On and Two-Factor Authentication
  authelia:
    container_name: authelia
    hostname: authelia
    restart: unless-stopped
    networks:
      apps: {}
    volumes:
      - '/etc/localtime:/etc/localtime:ro'
      - ${DOCKER_DIR}/authelia:/config
    environment:
      - 'TZ=${TZ}'
      - AUTHELIA_JWT_SECRET_FILE=/run/secrets/jwt
      - AUTHELIA_SESSION_SECRET_FILE=/run/secrets/session
      - AUTHELIA_STORAGE_MYSQL_PASSWORD_FILE=/run/secrets/mysql
      - AUTHELIA_NOTIFIER_SMTP_PASSWORD_FILE=/run/secrets/smtp
      - AUTHELIA_DUO_API_SECRET_KEY_FILE=/run/secrets/duo
      - AUTHELIA_SESSION_REDIS_PASSWORD_FILE=/run/secrets/redis
      - AUTHELIA_STORAGE_POSTGRES_PASSWORD_FILE=/run/secrets/postgress
      - AUTHELIA_AUTHENTICATION_BACKEND_LDAP_PASSWORD_FILE=/run/secrets/ldap
    secrets:
      - jwt
      - session
      - mysql
      - smtp
      - duo
      - redis
      - postgress
      - ldap
    image: authelia/authelia:4.21.0

  # portainer - container management frontend
  # - view logs
  # - restart containers
  # - connect to container shell (if available)
  # - see configuration
  portainer:
    container_name: portainer
    hostname: portainer
    restart: unless-stopped
    networks:
      apps: {}
    environment:
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
    volumes:
      - '/etc/localtime:/etc/localtime:ro'
      - '/var/run/docker.sock:/var/run/docker.sock'
      - '${DOCKER_DIR}/portainer:/data'
    image: portainer/portainer-ce:latest

  #-----------------------------------------------------------------------------
  # MEDIA
  #-----------------------------------------------------------------------------

  # plex - media server
  plex:
    container_name: plex
    hostname: plex
    restart: unless-stopped
    networks:
      apps: {}
    ports:
      - '32400:32400/tcp'
    environment:
      - TZ=${TZ}
      - PLEX_UID=${PUID}
      - PLEX_GID=${PGID}
      - PUID=${PUID}
      - PGID=${PGID}
      - PLEX_CLAIM=${PLEX_CLAIM}
      - ADVERTISE_IP=${PLEX_ADVERTISE_IP}
    volumes:
      - '/etc/localtime:/etc/localtime:ro'
      - '${DOCKER_DIR}/plex:/config'
      - '${DOCKER_DIR}/plex-transcode:/transcode'
      - '${DATA_DIR}/Media/TV:/TV'
      - '${DATA_DIR}/Media/Movies:/Movies'
      - '${DATA_DIR}/Media/Music:/Music'
    image: hotio/plex:autoscan

  # tautulli - plex monitor
  tautulli:
    container_name: tautulli
    hostname: tautulli
    restart: unless-stopped
    networks:
      apps: {}
    environment:
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
      - UMASK=022
    volumes:
      - '/etc/localtime:/etc/localtime:ro'
      - '${DOCKER_DIR}/tautulli:/config'
    image: hotio/tautulli:latest

  # kitana - plex plugin middleware (frontend)
  kitana:
    container_name: kitana
    hostname: kitana
    restart: unless-stopped
    networks:
      apps: {}
    environment:
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
    links:
      - plex
    command: -B 0.0.0.0:31337 -p /kitana -P
    volumes:
      - '/etc/localtime:/etc/localtime:ro'
      - '${DOCKER_DIR}/kitana:/app/data'
    image: pannal/kitana:latest

  # sabnzbd - usenet downloader written in python (easynews)
  sabnzbd:
    container_name: sabnzbd
    hostname: sabnzbd
    restart: unless-stopped
    networks:
      apps: {}
    environment:
      - TZ=${TZ}
      - UMASK=022
      - PUID=${PUID}
      - PGID=${PGID}
    volumes:
      - '/etc/localtime:/etc/localtime:ro'
      - '${DOCKER_DIR}/sabnzbd:/config'
      - '${DATA_DIR}:/data'
    image: hotio/sabnzbd:latest

  # nzbget - usenet downloader written in C++ (easynews)
  nzbget:
    container_name: nzbget
    hostname: nzbget
    restart: unless-stopped
    networks:
      apps: {}
    environment:
      - TZ=${TZ}
      - UMASK=022
      - PUID=${PUID}
      - PGID=${PGID}
    volumes:
      - '/etc/localtime:/etc/localtime:ro'
      - '${DOCKER_DIR}/nzbget:/config'
      - '${DATA_DIR}:/data'
    image: hotio/nzbget:latest

  # whoami - simple service that returns PC information from where it was accessed.
  # this is being used to keep apex domain alive
  whoami:
    container_name: whoami
    hostname: whoami
    networks:
      apps: {}
    environment:
      - 'TZ=${TZ}'
    volumes:
      - '/etc/localtime:/etc/localtime:ro'
    image: traefik/whoami

networks:
  apps:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

secrets:
  jwt:
    file: ${SECRETS_DIR}/jwt
  session:
    file: ${SECRETS_DIR}/session
  mysql:
    file: ${SECRETS_DIR}/mysql
  smtp:
    file: ${SECRETS_DIR}/smtp
  duo:
    file: ${SECRETS_DIR}/duo
  redis:
    file: ${SECRETS_DIR}/redis
  postgress:
    file: ${SECRETS_DIR}/postgress
  ldap:
    file: ${SECRETS_DIR}/ldap
  authmariadb_root_password:
    file: ${SECRETS_DIR}/authmariadb_root_password
