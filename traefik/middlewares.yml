http:
  middlewares:
    basic-auth:
      basicAuth:
        # be sure to mount the volume through docker-compose.yml
        usersFile: '/config/basic-auth/.htpasswd'
        realm: 'Traefik 2 Basic Auth'

    rate-limit:
      rateLimit:
        average: 100
        burst: 50

    secure-headers:
      headers:
        accessControlAllowMethods:
          - GET
          - OPTIONS
          - PUT
        accessControlMaxAge: 100
        hostsProxyHeaders:
          - 'X-Forwarded-Host'
        sslRedirect: true
        stsSeconds: 63072000
        stsIncludeSubdomains: true
        stsPreload: true
        forceSTSHeader: true
        # frameDeny: true #overwritten by customFrameOptionsValue
        customFrameOptionsValue: 'allow-from https:${DOMAIN_NAME}' #CSP takes care of this but may be needed for organizr.
        contentTypeNosniff: true
        browserXssFilter: true
        # sslForceHost: true # add sslHost to all of the services
        # sslHost: "${DOMAIN_NAME}"
        referrerPolicy: 'same-origin'
        # Setting contentSecurityPolicy is more secure but it can break things. Proper auth will reduce the risk.
        # the below line also breaks some apps due to 'none' - sonarr, radarr, etc.
        # contentSecurityPolicy: "frame-ancestors '*.${DOMAIN_NAME}:*';object-src 'none';script-src 'none';"
        featurePolicy: "camera 'none'; geolocation 'none'; microphone 'none'; payment 'none'; usb 'none'; vr 'none';"
        customResponseHeaders:
          X-Robots-Tag: 'none,noarchive,nosnippet,notranslate,noimageindex,'
          server: ''

    oauth:
      forwardAuth:
        address: 'http://oauth:4181' # Make sure you have the OAuth service in docker-compose.yml
        trustForwardHeader: true
        authResponseHeaders:
          - 'X-Forwarded-User'

    authelia:
      forwardAuth:
        address: 'http://authelia:9091/api/verify?rd=https://authelia.${DOMAIN_NAME}/'
        trustForwardHeader: true
        authResponseHeaders:
          - 'Remote-User'
          - 'Remote-Groups'
